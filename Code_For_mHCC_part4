setwd("C:\\Users\\yangyongheng\\Desktop\\mHCC\\Fig.5_mod")
.libPaths("D:/Program Files/R/R-4.0.5/library")
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(cowplot)
library(rstatix)
library(aplot)
library(tidyverse)
library(ggpubr)
library(cowplot)
library(rstatix)
library(ggplot2)
meta <- readRDS("C:/Users/yangyongheng/Desktop/manuscript/Figure5/meta_1106_mac.rds")
cluster_prop <- meta  %>% 
  group_by(orig.ident, rename) %>%
  dplyr::count()
cluster_prop <- as.data.frame(cluster_prop)
colnames(cluster_prop)[1] <- "subject"
subject_spot_count <- aggregate(cluster_prop$n, by=list(subject = cluster_prop$subject), FUN=sum)
colnames(subject_spot_count)[2] <- "total_spots"
cluster_prop <- merge(x = cluster_prop, y = subject_spot_count, by = c("subject"))
cluster_prop$cluster_pct_subject <- round((cluster_prop$n / cluster_prop$total_spots), digits = 3)*100
d_plot <- cluster_prop
d_plot$patients <- substr(d_plot$subject,1,9)
class <- data.frame(unique(d_plot$subject))
colnames(class) <- "subject"
class$class <- c("IM","IM","MO","N",
                 "N","MO","MO","MO",
                 "N","IM","IM",
                 "N","MO","MO",
                 "MO","N","N",
                 "N","MO","MO",
                 "N","MO","MO")
class$group <- c("T","T","T","N",
                 "N","T","T","T",
                 "N","T","T",
                 "N","T","T",
                 "T","N","N",
                 "N","T","T",
                 "N","T","T")
d_plot <- left_join(d_plot,class,by="subject")
type <- unique(d_plot$rename)
plot <- list()
library(rstatix)
library(ggpubr)
library(cowplot)
for (i in 1:length(unique(d_plot$rename))) {
  tg <- subset(d_plot,d_plot$rename ==type[i])
  tgc <- summarySE(tg, measurevar="cluster_pct_subject", groupvars=c("class"))
  stat.test <- subset(d_plot,d_plot$rename ==type[i]) %>%
    wilcox_test( cluster_pct_subject ~ class) %>%
    adjust_pvalue(method = "BH") %>%
    add_y_position()
  plot[[i]] <- ggplot() + 
    geom_col(data=tgc,
             aes(x=class,y=cluster_pct_subject,color=class,fill=class),
             alpha=0.5,
             width=0.6)+
    geom_errorbar(data = tgc,aes(x=class,
                                 ymin=cluster_pct_subject-se, 
                                 ymax=cluster_pct_subject+se,
                                 ,color=class), width=.1)+
    geom_jitter(data=tg,
                aes(x=class,y=cluster_pct_subject,
                    color=class,fill=class),width = 0.1,size=2,alpha=1)+
    scale_color_manual(values = c("darkred","darkblue","grey"))+
    scale_fill_manual(values = c("darkred","darkblue","grey"))+
    labs(x=type[i],y="Frequency")+theme_classic2()+theme(legend.position = "none")+
    theme(axis.text = element_text(color = "black",size=12))+
    stat_pvalue_manual(stat.test, label = "p.adjust", tip.length = 0,color = "black",size = 2)+
    expand_limits(x=c(1,3))
}
plot_grid(plotlist = c(plot),ncol = 4)
plot_1 <- list()
d_plot$group <- factor(d_plot$group,levels = c("T","N"))
for (i in 1:length(unique(d_plot$rename))) {
  tg <- subset(d_plot,d_plot$rename ==type[i])
  tgc <- summarySE(tg, measurevar="cluster_pct_subject", groupvars=c("group"))
  stat.test <- subset(d_plot,d_plot$rename ==type[i]) %>%
    wilcox_test( cluster_pct_subject ~ group) %>%
    adjust_pvalue(method = "BH") %>%
    add_y_position()
  plot_1[[i]] <- ggplot() + 
    geom_col(data=tgc,
             aes(x=group,y=cluster_pct_subject,color=group,fill=group),
             alpha=0.5,
             width=0.6)+
    geom_errorbar(data = tgc,aes(x=group,
                                 ymin=cluster_pct_subject-se, 
                                 ymax=cluster_pct_subject+se,
                                 ,color=group), width=.1)+
    geom_jitter(data=tg,
                aes(x=group,y=cluster_pct_subject,
                    color=group,fill=group),width = 0.1,size=2,alpha=1)+
    scale_color_manual(values = c("#E3716E","grey"))+
    scale_fill_manual(values = c("#E3716E","grey"))+
    labs(x=type[i],y="Frequency")+theme_classic2()+theme(legend.position = "none")+
    theme(axis.text = element_text(color = "black",size=12))+
    stat_pvalue_manual(stat.test, label = "p", tip.length = 0,color = "black",size = 2)+
    expand_limits(x=c(1,2))  
  
}
plot_grid(plotlist = c(plot_1),ncol = 4)
pdf(file = "Fig5_propmain.pdf",width = 3*3,height = 2.2*2)
plot_grid(plotlist = c(plot_1,plot),ncol = 4)
dev.off()


cluster_prop <- meta  %>% 
  group_by(orig.ident, rename_3) %>%
  dplyr::count()
cluster_prop <- as.data.frame(cluster_prop)
colnames(cluster_prop)[1] <- "subject"
subject_spot_count <- aggregate(cluster_prop$n, by=list(subject = cluster_prop$subject), FUN=sum)
colnames(subject_spot_count)[2] <- "total_spots"
cluster_prop <- merge(x = cluster_prop, y = subject_spot_count, by = c("subject"))
cluster_prop$cluster_pct_subject <- round((cluster_prop$n / cluster_prop$total_spots), digits = 3)*100
d_plot <- cluster_prop
d_plot$patients <- substr(d_plot$subject,1,9)
class <- data.frame(unique(d_plot$subject))
colnames(class) <- "subject"
class$class <- c("IM","IM","MO","N",
                 "N","MO","MO","MO",
                 "N","IM","IM",
                 "N","MO","MO",
                 "MO","N","N",
                 "N","MO","MO",
                 "N","MO","MO")
class$group <- c("T","T","T","N",
                 "N","T","T","T",
                 "N","T","T",
                 "N","T","T",
                 "T","N","N",
                 "N","T","T",
                 "N","T","T")

d_plot <- left_join(d_plot,class,by="subject")
type <- unique(d_plot$rename_3)
plot <- list()
for (i in 1:18) {
  tg <- subset(d_plot,d_plot$rename ==type[i])
  tgc <- summarySE(tg, measurevar="cluster_pct_subject", groupvars=c("class"))
  stat.test <- subset(d_plot,d_plot$rename ==type[i]) %>%
    wilcox_test( cluster_pct_subject ~ class) %>%
    adjust_pvalue(method = "BH") %>%
    add_y_position()
  plot[[i]] <- ggplot() + 
    geom_col(data=tgc,
             aes(x=class,y=cluster_pct_subject,color=class,fill=class),
             alpha=0.5,
             width=0.6)+
    geom_errorbar(data = tgc,aes(x=class,
                                 ymin=cluster_pct_subject-se, 
                                 ymax=cluster_pct_subject+se,
                                 ,color=class), width=.1)+
    geom_jitter(data=tg,
                aes(x=class,y=cluster_pct_subject,
                    color=class,fill=class),width = 0.1,size=2,alpha=1)+
    scale_color_manual(values = c("darkred","darkblue","grey"))+
    scale_fill_manual(values = c("darkred","darkblue","grey"))+
    labs(x=type[i],y="Frequency")+theme_classic2()+theme(legend.position = "none")+
    theme(axis.text = element_text(color = "black",size=12))+
    stat_pvalue_manual(stat.test, label = "p.adjust", tip.length = 0,color = "black",size = 2)+
    expand_limits(x=c(1,3))
}
pdf(file = "Fig5_propIMO.pdf",width = 2*6,height = 2*3)
plot_grid(plotlist = plot,ncol = 6)
dev.off()
library(ggpubr)
library(ggplot2)
library(rstatix)
library(tidyverse)
plot_1 <- list()
d_plot$group <- factor(d_plot$group,levels = c("T","N"))
for (i in 1:18) {
  tg <- subset(d_plot,d_plot$rename_3 ==type[i])
  tgc <- summarySE(tg, measurevar="cluster_pct_subject", groupvars=c("group"))
  stat.test <- subset(d_plot,d_plot$rename_3 ==type[i]) %>%
    wilcox_test( cluster_pct_subject ~ group) %>%
    adjust_pvalue(method = "BH") %>%
    add_y_position()
  plot_1[[i]] <- ggplot() + 
    geom_col(data=tgc,
             aes(x=group,y=cluster_pct_subject,color=group,fill=group),
             alpha=0.5,
             width=0.6)+
    geom_errorbar(data = tgc,aes(x=group,
                                 ymin=cluster_pct_subject-se, 
                                 ymax=cluster_pct_subject+se,
                                 ,color=group), width=.1)+
    geom_jitter(data=tg,
                aes(x=group,y=cluster_pct_subject,
                    color=group,fill=group),width = 0.1,size=2,alpha=1)+
    scale_color_manual(values = c("#E3716E","grey"))+
    scale_fill_manual(values = c("#E3716E","grey"))+
    labs(x=type[i],y="Frequency")+theme_classic2()+theme(legend.position = "none")+
    theme(axis.text = element_text(color = "black",size=12))+
    stat_pvalue_manual(stat.test, label = "p", tip.length = 0,color = "black",size = 2)+
    expand_limits(x=c(1,2))  
}
pdf(file = "Fig5_propTN.pdf",width = 1.8*6,height = 2*3)
plot_grid(plotlist = plot_1,ncol = 6)
dev.off()










































